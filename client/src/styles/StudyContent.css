/* Custom styles for StudyContent component */

/* Full height layout */
.max-h-screen {
  max-height: 100vh;
}

.animate-fade-in {
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Custom scrollbar for sidebar */
.sidebar-scroll::-webkit-scrollbar {
  width: 4px;
}

.sidebar-scroll::-webkit-scrollbar-track {
  background: #f1f5f9;
  border-radius: 2px;
}

.sidebar-scroll::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 2px;
}

.sidebar-scroll::-webkit-scrollbar-thumb:hover {
  background: #94a3b8;
}

/* Compact checkbox styling */
.progress-checkbox {
  position: relative;
  transition: all 0.2s ease;
}

.progress-checkbox:hover {
  transform: scale(1.1);
}

.progress-checkbox.completed {
  background: linear-gradient(135deg, #10b981, #059669);
  box-shadow: 0 2px 4px rgba(16, 185, 129, 0.3);
}

.progress-checkbox.completed:hover {
  box-shadow: 0 4px 8px rgba(16, 185, 129, 0.4);
}

/* Problem item styling */
.problem-item {
  transition: all 0.2s ease;
  border-left: 3px solid transparent;
}

.problem-item:hover {
  border-left-color: #3b82f6;
  background-color: #f8fafc;
}

.problem-item.completed {
  border-left-color: #10b981;
  background-color: #f0fdf4;
}

.problem-item.selected {
  border-left-color: #8b5cf6;
  background: linear-gradient(135deg, #3b82f6, #8b5cf6);
}

/* Subtopic header styling */
.subtopic-header {
  position: relative;
  overflow: hidden;
}

.subtopic-header::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
  transition: left 0.5s;
}

.subtopic-header:hover::before {
  left: 100%;
}

/* Compact badge styling */
.compact-badge {
  font-size: 0.625rem;
  padding: 0.125rem 0.25rem;
  line-height: 1.1;
  font-weight: 600;
}

/* Compact prose styling */
.prose-sm {
  font-size: 0.875rem;
  line-height: 1.5;
}

.prose-sm h1, .prose-sm h2, .prose-sm h3, .prose-sm h4 {
  margin-top: 1rem;
  margin-bottom: 0.5rem;
  font-size: 1rem;
  font-weight: 600;
}

.prose-sm p {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.prose-sm ul, .prose-sm ol {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  padding-left: 1rem;
}

.prose-sm li {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .problem-item {
    padding: 0.375rem;
  }

  .progress-checkbox {
    width: 0.875rem;
    height: 0.875rem;
  }

  .compact-badge {
    font-size: 0.5rem;
    padding: 0.1rem 0.2rem;
  }

  .prose-sm {
    font-size: 0.8rem;
    line-height: 1.4;
  }

  .prose-sm h1, .prose-sm h2, .prose-sm h3, .prose-sm h4 {
    font-size: 0.9rem;
    margin-top: 0.75rem;
    margin-bottom: 0.375rem;
  }
}

/* Loading animation */
.loading-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Smooth transitions for all interactive elements */
.transition-smooth {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Enhanced focus states for accessibility */
.focus-ring:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Gradient text for titles */
.gradient-text {
  background: linear-gradient(135deg, #3b82f6, #8b5cf6);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Subtle shadow for cards */
.card-shadow {
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}

.card-shadow:hover {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

/* Progress indicator */
.progress-indicator {
  position: relative;
  overflow: hidden;
}

.progress-indicator::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
  transform: translateX(-100%);
  transition: transform 0.6s;
}

.progress-indicator:hover::after {
  transform: translateX(100%);
}
